<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title><%= filename || 'StreamHub Player' %></title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <style>
    :root {
      --bg-primary: #0f0f0f;
      --bg-secondary: #1a1a1a;
      --bg-tertiary: #2a2a2a;
      --text-primary: #ffffff;
      --text-secondary: #aaaaaa;
      --text-muted: #666666;
      --accent: #ff0000;
      --accent-hover: #cc0000;
      --border: #333333;
      --shadow: rgba(0, 0, 0, 0.3);
      --gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    body.light {
      --bg-primary: #ffffff;
      --bg-secondary: #f9f9f9;
      --bg-tertiary: #f0f0f0;
      --text-primary: #0f0f0f;
      --text-secondary: #444444;
      --text-muted: #888888;
      --accent: #1976d2;
      --accent-hover: #1565c0;
      --border: #e0e0e0;
      --shadow: rgba(0, 0, 0, 0.1);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: var(--bg-primary);
      color: var(--text-primary);
      transition: all 0.3s ease;
      line-height: 1.6;
    }

    /* Header */
    .header {
      background: var(--bg-secondary);
      border-bottom: 1px solid var(--border);
      padding: 0 20px;
      height: 64px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      position: sticky;
      top: 0;
      z-index: 100;
      backdrop-filter: blur(10px);
    }

    .logo {
      display: flex;
      align-items: center;
      font-size: 24px;
      font-weight: bold;
      color: var(--text-primary);
      text-decoration: none;
      transition: color 0.3s ease;
    }

    .logo:hover {
      color: var(--accent);
    }

    .logo i {
      margin-right: 10px;
      background: var(--gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .header-controls {
      display: flex;
      align-items: center;
      gap: 15px;
    }

    .theme-toggle {
      background: none;
      border: 2px solid var(--border);
      color: var(--text-primary);
      padding: 8px 16px;
      border-radius: 25px;
      cursor: pointer;
      font-size: 14px;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .theme-toggle:hover {
      border-color: var(--accent);
      background: var(--accent);
      color: white;
    }

    /* Sidebar */
    .sidebar {
      width: 300px;
      background: var(--bg-secondary);
      border-right: 1px solid var(--border);
      height: calc(100vh - 64px);
      overflow-y: auto;
      transition: all 0.3s ease;
    }

    .sidebar.collapsed {
      width: 0;
      overflow: hidden;
    }

    .sidebar-header {
      padding: 20px;
      border-bottom: 1px solid var(--border);
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    .sidebar-title {
      font-size: 18px;
      font-weight: 600;
      color: var(--text-primary);
    }

    .sidebar-toggle {
      background: none;
      border: none;
      color: var(--text-secondary);
      font-size: 18px;
      cursor: pointer;
      transition: color 0.3s ease;
    }

    .sidebar-toggle:hover {
      color: var(--accent);
    }

    .file-item {
      display: flex;
      align-items: center;
      padding: 12px 20px;
      color: var(--text-primary);
      text-decoration: none;
      border-bottom: 1px solid var(--border);
      transition: all 0.3s ease;
      position: relative;
    }

    .file-item:hover {
      background: var(--bg-tertiary);
      color: var(--accent);
    }

    .file-item.active {
      background: var(--accent);
      color: white;
    }

    .file-item.active::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      width: 4px;
      background: var(--gradient);
    }

    .file-item i {
      margin-right: 12px;
      font-size: 16px;
      width: 20px;
      text-align: center;
    }

    .file-name {
      flex: 1;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      font-size: 14px;
    }

    /* Main Content */
    .main-container {
      display: flex;
      height: calc(100vh - 64px);
    }

    .main-content {
      flex: 1;
      overflow-y: auto;
      background: var(--bg-primary);
    }

    .video-container {
      position: relative;
      background: #000;
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 60vh;
    }

    .video-player {
      width: 100%;
      height: 100%;
      max-height: 70vh;
      object-fit: contain;
    }

    .video-info {
      padding: 20px;
      border-bottom: 1px solid var(--border);
    }

    .video-title {
      font-size: 24px;
      font-weight: 600;
      margin-bottom: 10px;
      color: var(--text-primary);
    }

    .video-meta {
      display: flex;
      align-items: center;
      gap: 20px;
      color: var(--text-secondary);
      font-size: 14px;
      margin-bottom: 15px;
    }

    .video-actions {
      display: flex;
      gap: 15px;
      flex-wrap: wrap;
    }

    .action-btn {
      background: var(--bg-secondary);
      color: var(--text-primary);
      border: 1px solid var(--border);
      padding: 12px 20px;
      border-radius: 25px;
      cursor: pointer;
      font-size: 14px;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 8px;
      text-decoration: none;
    }

    .action-btn:hover {
      background: var(--accent);
      color: white;
      border-color: var(--accent);
      transform: translateY(-2px);
    }

    .action-btn.primary {
      background: var(--accent);
      color: white;
      border-color: var(--accent);
    }

    .action-btn.primary:hover {
      background: var(--accent-hover);
    }

    /* Empty State */
    .empty-state {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 60vh;
      text-align: center;
      color: var(--text-muted);
    }

    .empty-state i {
      font-size: 80px;
      margin-bottom: 20px;
      opacity: 0.5;
    }

    .empty-state h2 {
      font-size: 28px;
      margin-bottom: 10px;
      color: var(--text-secondary);
    }

    .empty-state p {
      font-size: 16px;
      max-width: 400px;
      line-height: 1.5;
    }

    /* Mobile Responsiveness */
    @media (max-width: 768px) {
      .sidebar {
        position: fixed;
        top: 64px;
        left: -300px;
        z-index: 1000;
        box-shadow: 5px 0 15px var(--shadow);
      }

      .sidebar.open {
        left: 0;
      }

      .main-content {
        width: 100%;
      }

      .video-title {
        font-size: 20px;
      }

      .video-actions {
        flex-direction: column;
      }

      .action-btn {
        justify-content: center;
      }
    }

    /* Scrollbar Styling */
    ::-webkit-scrollbar {
      width: 8px;
    }

    ::-webkit-scrollbar-track {
      background: var(--bg-secondary);
    }

    ::-webkit-scrollbar-thumb {
      background: var(--border);
      border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb:hover {
      background: var(--text-muted);
    }
  </style>
</head>
<body>
  <header class="header">
    <div style="display: flex; align-items: center; gap: 15px;">
      <button class="sidebar-toggle" onclick="toggleSidebar()" style="display: none;">
        <i class="fas fa-bars"></i>
      </button>
      <a href="/files" class="logo">
        <i class="fas fa-play-circle"></i>
        StreamHub
      </a>
    </div>
    <div class="header-controls">
      <button class="theme-toggle" onclick="toggleTheme()">
        <i class="fas fa-sun"></i>
        <span>Light</span>
      </button>
    </div>
  </header>

  <div class="main-container">
    <div class="sidebar" id="sidebar">
      <div class="sidebar-header">
        <h3 class="sidebar-title">Files</h3>
        <button class="sidebar-toggle" onclick="toggleSidebar()">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="file-list">
        <% entries.forEach(entry => { %>
          <% 
            let icon = 'fas fa-file';
            let isActive = filename && entry.name === filename;
            
            if (entry.isDir) {
              icon = 'fas fa-folder';
            } else {
              const ext = entry.name.split('.').pop().toLowerCase();
              switch(ext) {
                case 'mp4': case 'avi': case 'mkv': case 'mov': case 'wmv': case 'flv': case 'webm': case 'm4v':
                  icon = 'fas fa-video';
                  break;
                case 'mp3': case 'wav': case 'flac': case 'aac': case 'ogg': case 'm4a':
                  icon = 'fas fa-music';
                  break;
                case 'jpg': case 'jpeg': case 'png': case 'gif': case 'bmp': case 'svg': case 'webp':
                  icon = 'fas fa-image';
                  break;
                default:
                  icon = 'fas fa-file';
              }
            }
          %>
          <a href="<%= entry.isDir ? '/files?path=' + entry.encodedPath : '/file?path=' + entry.encodedPath %>" 
             class="file-item <%= isActive ? 'active' : '' %>">
            <i class="<%= icon %>"></i>
            <span class="file-name"><%= entry.name %></span>
          </a>
        <% }) %>
      </div>
    </div>

    <div class="main-content">
      <% if (filename) { %>
        <div class="video-container">
          <% 
            const ext = filename.split('.').pop().toLowerCase();
            const isVideo = ['mp4', 'avi', 'mkv', 'mov', 'wmv', 'flv', 'webm', 'm4v'].includes(ext);
            const isAudio = ['mp3', 'wav', 'flac', 'aac', 'ogg', 'm4a'].includes(ext);
          %>
          <% if (isVideo) { %>
            <video class="video-player" controls preload="metadata">
              <source src="/stream?path=<%= encodedPath %>" type="video/<%= ext === 'mkv' ? 'webm' : ext %>">
              Your browser does not support the video tag.
            </video>
          <% } else if (isAudio) { %>
            <audio class="video-player" controls preload="metadata" style="width: 100%; height: auto;">
              <source src="/stream?path=<%= encodedPath %>" type="audio/<%= ext %>">
              Your browser does not support the audio tag.
            </audio>
          <% } else { %>
            <div class="empty-state">
              <i class="fas fa-file-alt"></i>
              <h2>Preview Not Available</h2>
              <p>This file type cannot be previewed. Use the download button to save the file to your device.</p>
            </div>
          <% } %>
        </div>

        <div class="video-info">
          <h1 class="video-title"><%= filename %></h1>
          <div class="video-meta">
            <span><i class="fas fa-file"></i> <%= filename.split('.').pop().toLowerCase().toUpperCase() %> File</span>
            <span><i class="fas fa-calendar"></i> <%= new Date().toLocaleDateString() %></span>
          </div>
          <div class="video-actions">
            <a href="/download?path=<%= encodedPath %>" class="action-btn primary">
              <i class="fas fa-download"></i>
              Download
            </a>
            <a href="/stream?path=<%= encodedPath %>" target="_blank" class="action-btn">
              <i class="fas fa-external-link-alt"></i>
              Open in New Tab
            </a>
            <button class="action-btn" onclick="shareFile()">
              <i class="fas fa-share"></i>
              Share
            </button>
            <button class="action-btn" onclick="toggleFullscreen()">
              <i class="fas fa-expand"></i>
              Fullscreen
            </button>
          </div>
        </div>
      <% } else { %>
        <div class="empty-state">
          <i class="fas fa-play-circle"></i>
          <h2>Welcome to StreamHub</h2>
          <p>Select a video or audio file from the sidebar to start streaming. Browse through your media collection and enjoy seamless playback.</p>
        </div>
      <% } %>
    </div>
  </div>

  <script>
    function toggleTheme() {
      const body = document.body;
      const button = document.querySelector('.theme-toggle');
      const icon = button.querySelector('i');
      const text = button.querySelector('span');
      
      if (body.classList.contains('light')) {
        body.classList.remove('light');
        icon.className = 'fas fa-sun';
        text.textContent = 'Light';
        localStorage.setItem('theme', 'dark');
      } else {
        body.classList.add('light');
        icon.className = 'fas fa-moon';
        text.textContent = 'Dark';
        localStorage.setItem('theme', 'light');
      }
    }

    function toggleSidebar() {
      const sidebar = document.getElementById('sidebar');
      sidebar.classList.toggle('open');
    }

    function shareFile() {
      if (navigator.share) {
        navigator.share({
          title: '<%= filename || "StreamHub File" %>',
          url: window.location.href
        });
      } else {
        // Fallback: copy URL to clipboard
        navigator.clipboard.writeText(window.location.href).then(() => {
          alert('Link copied to clipboard!');
        });
      }
    }

    function toggleFullscreen() {
      const video = document.querySelector('.video-player');
      if (video) {
        if (video.requestFullscreen) {
          video.requestFullscreen();
        } else if (video.webkitRequestFullscreen) {
          video.webkitRequestFullscreen();
        } else if (video.msRequestFullscreen) {
          video.msRequestFullscreen();
        }
      }
    }

    // Load saved theme
    document.addEventListener('DOMContentLoaded', function() {
      const savedTheme = localStorage.getItem('theme');
      if (savedTheme === 'light') {
        document.body.classList.add('light');
        const button = document.querySelector('.theme-toggle');
        const icon = button.querySelector('i');
        const text = button.querySelector('span');
        icon.className = 'fas fa-moon';
        text.textContent = 'Dark';
      }

      // Show mobile sidebar toggle on small screens
      if (window.innerWidth <= 768) {
        document.querySelector('.header .sidebar-toggle').style.display = 'block';
      }
    });

    // Handle window resize
    window.addEventListener('resize', function() {
      const sidebar = document.getElementById('sidebar');
      const mobileToggle = document.querySelector('.header .sidebar-toggle');
      
      if (window.innerWidth <= 768) {
        mobileToggle.style.display = 'block';
        sidebar.classList.remove('open');
      } else {
        mobileToggle.style.display = 'none';
        sidebar.classList.remove('open');
      }
    });

    // Close sidebar when clicking outside on mobile
    document.addEventListener('click', function(e) {
      if (window.innerWidth <= 768) {
        const sidebar = document.getElementById('sidebar');
        const toggleBtn = document.querySelector('.sidebar-toggle');
        
        if (!sidebar.contains(e.target) && !toggleBtn.contains(e.target)) {
          sidebar.classList.remove('open');
        }
      }
    });

    // Video player enhancements
    document.addEventListener('DOMContentLoaded', function() {
      const video = document.querySelector('video');
      if (video) {
        // Add keyboard controls
        document.addEventListener('keydown', function(e) {
          if (e.target.tagName.toLowerCase() !== 'input') {
            switch(e.key) {
              case ' ':
                e.preventDefault();
                video.paused ? video.play() : video.pause();
                break;
              case 'ArrowLeft':
                e.preventDefault();
                video.currentTime -= 10;
                break;
              case 'ArrowRight':
                e.preventDefault();
                video.currentTime += 10;
                break;
              case 'f':
                e.preventDefault();
                toggleFullscreen();
                break;
            }
          }
        });

        // Add loading indicator
        video.addEventListener('loadstart', function() {
          console.log('Loading video...');
        });

        video.addEventListener('canplay', function() {
          console.log('Video ready to play');
        });

        video.addEventListener('error', function() {
          console.error('Video loading error');
        });
      }
    });
  </script>
</body>
</html>